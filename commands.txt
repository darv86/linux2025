// by default operator > works with STDOUT stream,
// but it can be specified manually,
// by adding 1 before operator >
ls -al 1> stdout-file

// 2 before operator > will set stream to STDERR
ls -al 2> stderr-file

// will create a new file,
// if exist, override;
// alternative to the command (touch new-file.ext)
> new-file.ext

// output the first part of a file,
// by default: 10 lines
head ./my-file.txt

// output the last part of a file,
// by default: 10 lines
tail ./my-file.txt
// flag -f doesn't close a file and watch for a new lines
tail -f ./my-file.txt

// grep (global regex print)
// output all lines which match myRegEx
grep myRegEx ./my-file.txt

// 3 files store info about linux users
// (to create backup of all users, need to copy these files):
// all users
/etc/passwd
// all groups
/etc/group
// all users passwords
/etc/shadow

// change permissions
chmod 755 ./file.txt
// is equal to:
chmod u=rwx,g=rx,o=rx ./file.txt
// or:
chmod u+rwx,g+rx,o+rx ./file.txt

// u - user
// g - group
// o - other (not owner and users are not in the group)
// a - all (owner and all users)

// to strip some permissions
chmod o-wx ./file.txt
// is equal to:
chmod 754 ./file.txt

// r (read) = 4 (binary: 100)
// w (write) = 2 (binary: 010)
// x (execute) = 1 (binary: 001)
// "x" gives access to enter a directory

// statistic for a file or directory
stat /path/to/file.txt

// to create new group
sudo groupadd groupName

// to add user to a group;
// flag 'a' appends user to a group
// can't be used as a stand along flag,
// must be combined with another (e.g. with flag 'G');
// flag 'G' adds user to a group,
// but without flag 'a', removes from others groups
sudo usermod -aG groupName userName

// there is a file, where all groups and users migrations can be set up
/etc/sudoers